<adonisControls:AdonisWindow
	x:Class="Vividl.Views.SettingsWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
	xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
	xmlns:app="clr-namespace:Bluegrams.Application;assembly=AppHelpers.WPF"
	xmlns:h="clr-namespace:Vividl.Helpers"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
	xmlns:lex="http://wpflocalizeextension.codeplex.com"
	xmlns:model="clr-namespace:Vividl.Models"
	xmlns:p="clr-namespace:Vividl.Properties"
	xmlns:v="clr-namespace:Vividl.Views"
	Title="{lex:Loc SettingsWindow_Title}"
	Width="500"
	Height="430"
	lex:LocalizeDictionary.DesignCulture="en"
	lex:ResxLocalizationProvider.DefaultAssembly="Vividl"
	lex:ResxLocalizationProvider.DefaultDictionary="Resources"
	ResizeMode="NoResize"
	ShowInTaskbar="False"
	WindowStartupLocation="CenterOwner">
	<Window.Style>
		<Style BasedOn="{StaticResource {x:Type Window}}" TargetType="Window" />
	</Window.Style>
	<Window.Resources>
		<Style BasedOn="{StaticResource {x:Type GroupBox}}" TargetType="GroupBox">
			<Setter Property="Padding" Value="2,4" />
			<Setter Property="Margin" Value="0,6,0,0" />
		</Style>
		<Style BasedOn="{StaticResource {x:Type CheckBox}}" TargetType="CheckBox">
			<Setter Property="Margin" Value="4,6" />
		</Style>
		<Style BasedOn="{StaticResource {x:Type Label}}" TargetType="Label">
			<Setter Property="Padding" Value="4,6" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
		</Style>
	</Window.Resources>
	<DockPanel>
		<DockPanel
			Margin="4"
			DockPanel.Dock="Bottom"
			KeyboardNavigation.TabNavigation="Local"
			LastChildFill="False">
			<Button
				MinWidth="80"
				Command="{Binding ResetAllSettingsCommand}"
				Content="{lex:Loc Reset}"
				DockPanel.Dock="Left"
				TabIndex="0"
				ToolTip="{lex:Loc SettingsWindow_ToolTipReset}" />
			<Button
				MinWidth="80"
				Content="{lex:Loc Cancel}"
				DockPanel.Dock="Right"
				IsCancel="True"
				TabIndex="2" />
			<Button
				MinWidth="80"
				Click="SubmitButton_Click"
				Content="{lex:Loc Submit}"
				DockPanel.Dock="Right"
				IsDefault="True"
				TabIndex="1" />
		</DockPanel>
		<TabControl x:Name="tabSettings" SelectionChanged="TabControl_SelectionChanged">
			<TabItem Header="{lex:Loc SettingsWindow_General}">
				<StackPanel>
					<GroupBox Header="{lex:Loc SettingsWindow_Appearance}">
						<StackPanel Orientation="Horizontal">
							<TextBlock
								Margin="4,4,10,4"
								VerticalAlignment="Center"
								Text="{lex:Loc SettingsWindow_Theme}" />
							<ComboBox
								Margin="4"
								DisplayMemberPath="Description"
								ItemsSource="{h:Enum {x:Type model:Theme}}"
								SelectedValue="{Binding Settings.AppTheme, Mode=TwoWay}"
								SelectedValuePath="Value">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="SelectionChanged">
										<i:InvokeCommandAction Command="{Binding SwitchAppThemeCommand}" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</ComboBox>
						</StackPanel>
					</GroupBox>
					<GroupBox Header="{lex:Loc SettingsWindow_DownloadFolder}">
						<v:PathSelectionControl
							FileService="{Binding FileService}"
							IsSelectFolder="True"
							SelectedPath="{Binding Settings.DownloadFolder, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
					</GroupBox>
					<GroupBox Header="{lex:Loc SettingsWindow_VideoList}">
						<StackPanel>
							<StackPanel Orientation="Horizontal">
								<TextBlock
									Margin="4,4,10,4"
									VerticalAlignment="Center"
									Text="{lex:Loc SettingsWindow_DefaultFormat}" />
								<ComboBox
									Margin="4"
									ItemsSource="{Binding DefaultFormats, Mode=OneWay}"
									SelectedIndex="{Binding Settings.DefaultFormat, Mode=TwoWay, UpdateSourceTrigger=Explicit}">
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<DockPanel>
												<icon:PackIconModern
													Margin="0,0,4,0"
													DockPanel.Dock="Left"
													Kind="{Binding Converter={StaticResource iconConv}}" />
												<ContentControl Content="{Binding}" />
											</DockPanel>
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
							</StackPanel>
							<CheckBox Content="{lex:Loc SettingsWindow_ShowAllFormats}" IsChecked="{Binding Settings.ShowAllFormats, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
							<CheckBox Content="{lex:Loc SettingsWindow_AllowDuplicates}" IsChecked="{Binding Settings.AllowDuplicateEntries, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
						</StackPanel>
					</GroupBox>
				</StackPanel>
			</TabItem>
			<TabItem Header="{lex:Loc SettingsWindow_Download}">
				<StackPanel>
					<GroupBox Header="{lex:Loc SettingsWindow_DownloadOptions}">
						<StackPanel>
							<DockPanel>
								<TextBlock
									VerticalAlignment="Center"
									DockPanel.Dock="Left"
									Text="{lex:Loc SettingsWindow_MaxProcesses}" />
								<TextBlock
									VerticalAlignment="Center"
									DockPanel.Dock="Right"
									Text="{Binding ElementName=slideProcesses, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
								<Slider
									x:Name="slideProcesses"
									Margin="8,2"
									IsSnapToTickEnabled="True"
									Maximum="8"
									Minimum="1"
									TickFrequency="1"
									TickPlacement="BottomRight"
									Value="{Binding Settings.MaxProcesses, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
							</DockPanel>
							<StackPanel Orientation="Horizontal">
								<TextBlock
									Margin="4,4,10,4"
									VerticalAlignment="Center"
									Text="{lex:Loc SettingsWindow_OverwriteFiles}" />
								<ComboBox
									Margin="4"
									ItemsSource="{h:Enum {x:Type model:OverwriteMode}}"
									SelectedValue="{Binding Settings.OverwriteMode, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
									SelectedValuePath="Value">
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<TextBlock Text="{lex:Loc {Binding Description}}" />
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
							</StackPanel>
							<CheckBox Content="{lex:Loc SettingsWindow_PreferRecoding}" IsChecked="{Binding Settings.PreferRecoding, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
							<StackPanel Orientation="Horizontal">
								<CheckBox
									x:Name="chkArchive"
									Margin="4,4,10,4"
									VerticalAlignment="Center"
									Content="{lex:Loc SettingsWindow_ArchiveFile}"
									IsChecked="{Binding Settings.UseArchive, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
								<TextBox
									MinWidth="150"
									Margin="4"
									IsEnabled="{Binding ElementName=chkArchive, Path=IsChecked}"
									Text="{Binding Settings.ArchiveFilename, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
							</StackPanel>
							<CheckBox Content="{lex:Loc SettingsWindow_RestrictFilenames}" IsChecked="{Binding Settings.RestrictFilenames, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
							<CheckBox Content="{lex:Loc SettingsWindow_AddMetadata}" IsChecked="{Binding Settings.AddMetadata, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
							<StackPanel Orientation="Horizontal">
								<TextBlock
									Margin="4,4,10,4"
									VerticalAlignment="Center"
									Text="{lex:Loc SettingsWindow_HardwareAcceleration}" />
								<ComboBox
									Margin="4"
									ItemsSource="{h:Enum {x:Type model:HwAccelMode}}"
									SelectedValue="{Binding Settings.FFmpegHardwareAcceleration, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
									SelectedValuePath="Value">
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<TextBlock Text="{lex:Loc {Binding Description}}" />
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
							</StackPanel>
						</StackPanel>
					</GroupBox>
					<GroupBox Header="{lex:Loc SettingsWindow_Proxy}">
						<StackPanel>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition Width="3*" />
								</Grid.ColumnDefinitions>
								<TextBlock
									Margin="4"
									VerticalAlignment="Center"
									Text="{lex:Loc SettingsWindow_ProxyUrl}" />
								<TextBox
									Grid.Column="1"
									Margin="4"
									Text="{Binding Settings.Proxy, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
							</Grid>
						</StackPanel>
					</GroupBox>
				</StackPanel>
			</TabItem>
			<TabItem Header="{lex:Loc SettingsWindow_Advanced}">
				<StackPanel>
					<GroupBox>
						<GroupBox.Header>
							<TextBlock>
								<Run Text="{Binding Source={lex:Loc MainWindow_HeaderAutomate}, Converter={StaticResource resConv}}" />
								<Run Text="-" />
								<Run Text="{Binding Source={lex:Loc MainWindow_MenuAutomateEnable}, Converter={StaticResource resConv}}" />
							</TextBlock>
						</GroupBox.Header>
						<StackPanel>
							<CheckBox Content="{lex:Loc SettingsWindow_AutomateDownload}" IsChecked="{Binding Settings.SmartAutomationDownload, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition Width="3*" />
								</Grid.ColumnDefinitions>
								<TextBlock
									Margin="4"
									VerticalAlignment="Center"
									Text="{lex:Loc SettingsWindow_AutomatePattern}" />
								<TextBox
									Grid.Column="1"
									Margin="4"
									adonisExtensions:WatermarkExtension.Watermark="{lex:Loc SettingsWindow_AutomatePatternHint}"
									Text="{Binding Settings.SmartAutomationPattern, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
							</Grid>
							<CheckBox Content="{lex:Loc SettingsWindow_AutomatePatternIsRegex}" IsChecked="{Binding Settings.SmartAutomationPatternIsRegex, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
						</StackPanel>
					</GroupBox>
					<GroupBox Header="{lex:Loc CustomArgsWindow_Title}">
						<DockPanel>
							<Button
								Command="{Binding EditCustomArgsCommand}"
								Content="{lex:Loc PathSelectionControl_Change}"
								DockPanel.Dock="Right" />
							<TextBox
								Margin="4"
								IsReadOnly="True"
								Text="{Binding Settings.CustomDownloaderArgs, Mode=OneWay, Converter={StaticResource removeLineBreaks}}" />
						</DockPanel>
					</GroupBox>
				</StackPanel>
			</TabItem>
			<TabItem Header="{lex:Loc SettingsWindow_Binaries}">
				<StackPanel>
					<GroupBox Header="Vividl">
						<StackPanel>
							<DockPanel>
								<Button
									Command="{Binding Path=UpdateVividlCommand}"
									Content="{lex:Loc SettingsWindow_CheckForUpdates}"
									DockPanel.Dock="Right" />
								<Label>
									<WrapPanel>
										<TextBlock>
											<Run Text="{lex:Loc SettingsWindow_Version}" />
											<Run Text="  " />
											<Run Text="{x:Static app:AppInfo.Version}" />
										</TextBlock>
									</WrapPanel>
								</Label>
							</DockPanel>
							<CheckBox Content="{lex:Loc SettingsWindow_AutoCheckUpdates}" IsChecked="{Binding Settings.AutoCheckUpdates, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
						</StackPanel>
					</GroupBox>
					<GroupBox Header="{lex:Loc SettingsWindow_YoutubeDL}">
						<StackPanel>
							<DockPanel>
								<Button
									Command="{Binding Path=UpdateYoutubeDLCommand}"
									Content="{lex:Loc SettingsWindow_CheckForUpdates}"
									DockPanel.Dock="Right"
									IsEnabled="{Binding Path=YoutubeDLUpdateService.IsUpdating, Converter={StaticResource invBool}}" />
								<Label>
									<WrapPanel>
										<TextBlock>
											<Run Text="{lex:Loc SettingsWindow_Version}" />
											<Run Text="  " />
											<Run Text="{Binding YoutubeDLUpdateService.Version, Mode=OneWay}" />
										</TextBlock>
										<TextBlock
											Margin="8,0"
											Text="{lex:Loc SettingsWindow_CheckingForUpdates}"
											Visibility="{Binding Path=YoutubeDLUpdateService.IsUpdating, Converter={StaticResource boolToVis}}" />
									</WrapPanel>
								</Label>
							</DockPanel>
							<CheckBox Content="{lex:Loc SettingsWindow_AutoCheckUpdates}" IsChecked="{Binding Settings.AutoCheckUpdatesYoutubeDL, Mode=TwoWay, UpdateSourceTrigger=Explicit}" />
							<v:PathSelectionControl
								FileService="{Binding FileService}"
								SelectedPath="{Binding Settings.YoutubeDLPath, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
								ToolTip="{lex:Loc SettingsWindow_Path_ToolTip}" />
						</StackPanel>
					</GroupBox>
					<GroupBox Header="{lex:Loc SettingsWindow_Ffmpeg}">
						<v:PathSelectionControl
							FileService="{Binding FileService}"
							SelectedPath="{Binding Settings.FfmpegPath, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
							ToolTip="{lex:Loc SettingsWindow_Path_ToolTip}" />
					</GroupBox>
				</StackPanel>
			</TabItem>
		</TabControl>
	</DockPanel>
</adonisControls:AdonisWindow>
